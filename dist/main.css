*,
*:before,
*:after {
  box-sizing: border-box; }

* {
  margin: 0;
  padding: 0;
  outline: 0;
  -webkit-overflow-scrolling: touch; }

html {
  font-size: 16px;
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
  scroll-behavior: smooth; }

@-ms-viewport {
  width: device-width; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
  max-width: 100%; }

img, video {
  height: auto; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

a, button:focus, .btn:focus {
  outline: 0; }

p img {
  margin-bottom: 1rem; }

textarea {
  resize: vertical; }

::placeholder {
  font: inherit; }

[role="button"] {
  cursor: pointer; }

label[for] {
  cursor: pointer; }

[tabindex="-1"]:focus {
  outline: none; }

progress {
  vertical-align: baseline; }

pre {
  overflow: hidden;
  font-family: inherit; }

dt {
  font-weight: bold;
  text-decoration: underline; }

dd {
  margin: 0;
  padding: 0 0 0.5em 0; }

b, strong {
  font-weight: bold; }

i, em {
  font-style: italic; }

figure {
  margin-bottom: 1rem; }

fieldset {
  padding: 1rem; }

template {
  display: none; }

[hidden] {
  display: none; }

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1rem;
  font-weight: 400;
  color: #000000;
  line-height: 1.5;
  word-wrap: break-word;
  background-color: white; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

hr {
  margin: 2rem 0;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc; }

figure {
  display: inline-block; }
  figure img {
    margin-bottom: 0.5rem;
    line-height: 1; }
  figure figcaption {
    font-size: 1rem;
    color: #818a91; }

a {
  color: #3f51b5;
  text-decoration: none; }
  a:hover {
    color: #3f51b5; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
  font-weight: 700;
  line-height: 1.25;
  text-rendering: optimizeLegibility;
  color: inherit; }
  h1 a, h2 a, h3 a, h4 a, h5 a, h6 a, .h1 a, .h2 a, .h3 a, .h4 a, .h5 a, .h6 a {
    color: inherit; }
    h1 a:hover, h2 a:hover, h3 a:hover, h4 a:hover, h5 a:hover, h6 a:hover, .h1 a:hover, .h2 a:hover, .h3 a:hover, .h4 a:hover, .h5 a:hover, .h6 a:hover {
      text-decoration: none; }
  h1 small, h2 small, h3 small, h4 small, h5 small, h6 small, .h1 small, .h2 small, .h3 small, .h4 small, .h5 small, .h6 small {
    font-weight: normal;
    line-height: 1;
    font-weight: 400;
    line-height: 1.35;
    letter-spacing: -0.02em;
    font-size: 75%; }

.lead {
  font-size: 1.25rem; }

h1, .h1 {
  font-size: 3rem; }

h2, .h2 {
  font-size: 2.25rem; }

h3, .h3 {
  font-size: 1.75rem; }

h4, .h4 {
  font-size: 1.25rem; }

h5, .h5 {
  font-size: 1.15rem; }

h6, .h6 {
  font-size: 1rem; }

p, blockquote, hr, ol, ul, dl, fieldset, address, form {
  font-size: 1.125rem; }

ol, ul {
  padding-left: 2rem; }

mark, code, samp, kbd {
  position: relative;
  top: -1px;
  padding: 4px 4px 2px 4px;
  display: inline-block;
  line-height: 1;
  color: rgba(49, 52, 57, 0.85); }

time, cite, small, .small, figcaption, summary, details p {
  font-size: 0.85rem; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted rgba(0, 0, 0, 0.5);
  text-decoration: none;
  cursor: help; }

mark {
  background-color: yellow; }

address {
  font-style: normal;
  line-height: inherit; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/